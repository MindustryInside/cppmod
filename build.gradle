import org.gradle.internal.jvm.*

apply plugin: 'java'

sourceSets.main.java.srcDirs = ['src/java']

def jvm = Jvm.current()
def JAVA_HOME = jvm.javaHome
def TEMP = File.createTempDir()
def OS = System.getProperty('os.name')

ext {
    natives = [:]

    natives.src = file("$rootDir/src/cpp")
    natives.include = file("$natives.src/java")

    natives.javaSources = [
        'nativeio.jni.Natives'
    ]

    natives.javaSources = natives.javaSources.collect { String clazz ->
        clazz = clazz.replace '.', '\\'
        clazz += '.java'

        return "$rootDir\\src\\java\\$clazz"
    }

    versions = [:]

    versions.mindustry = 'v125.1'

    cmake = [:]

    cmake.cmakelists = file("$rootDir/CMakeLists.txt")
    cmake.build = file("$rootDir/cmake-build")
}

repositories {
    mavenCentral()
    maven { url "https://jitpack.io" }
}

dependencies {
    implementation "com.github.Anuken.Mindustry:core:$versions.mindustry"
    implementation "com.github.Anuken.Arc:arc-core:$versions.mindustry"
}

task run(type: JavaExec) {
    main = 'nativeio.Main'
    classpath = sourceSets.main.runtimeClasspath

    jvmArgs "-Djava.library.path=$cmake.build"
}

task genHeaders() {
    doLast {
        exec {
            executable jvm.javacExecutable
                args '-d', TEMP
                args '-h', natives.include
                args natives.javaSources
        }
    }
}

task natives() {
    doLast {
        exec {
            executable 'cmake'
                args '-B', cmake.build
                args '-G', '"MinGW Makefiles"'
        }

        exec {
            executable 'make'
                args '-C', cmake.build
        }
    }
}
